[versions]
agp = "8.5.2"
analytics = "1.5.0"
android-compileSdk = "35"
android-minSdk = "26"
android-targetSdk = "35"
androidx-activityCompose = "1.9.2"
androidx-lifecycle = "2.8.0"
appRating = "1.0.0"
compose-plugin = "1.6.11"
firebaseAnalytics = "2.1.0"
firebasePerf = "2.1.0"
googleServicesVersion = "4.4.2"
gradle = "4.0.2"
konnectivity = "0.1-alpha01"
kotlin = "2.0.20"
kotlinxDatetime = "0.6.1"
kotlinxSerializationJson = "1.7.2"
permissionsCompose = "0.18.1"
playServicesAds = "23.6.0"
tts = "2.5.0"
voyager = "1.0.0"
koin = "3.5.6"
koinComposeMultiplatform = "1.2.0-Beta4"
coroutines = "1.8.0"
kmpRevenueCat="1.0.0"
ktor = "2.3.12"
voyagerNavigator = "1.1.0-beta02"
voyagerTransitions = "1.1.0-beta02"
voyagerVersion = "1.1.0-beta02"
assertk = "0.28.1"
coreKtx = "1.6.1"
composeTest = "1.7.2"
kmpNotifier = "1.0.0"
kmpAuth = "2.0.0"
firebaseBom="33.3.0"
googleServices="4.4.2"
firebaseCrashlytics = "3.0.2"
uiAndroid = "1.7.3"
datastore = "1.1.1"
foundationLayoutAndroid = "1.7.3"
core-splashscreen = "1.0.1"
coreKtxVersion = "1.10.3"
reviewKtx = "2.0.2"

pods-storekit = "1.1"
pods-firebase = "11.4.2"
pods-signin = "8.0"
material3Android = "1.3.1"
activityKtx = "1.10.0"
datastoreCoreAndroid = "1.1.3"


[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJson" }

# Splash Screen
core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "core-splashscreen" }

# Voyager - Navigation
tts = { module = "nl.marc-apps:tts", version.ref = "tts" }
tts-compose = { module = "nl.marc-apps:tts-compose", version.ref = "tts" }
voyager-bottom-sheet-navigator = { module = "cafe.adriel.voyager:voyager-bottom-sheet-navigator", version.ref = "voyagerNavigator" }
voyager-navigator-v110beta02 = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyagerNavigator" }
voyager-screenmodel-v110beta02 = { module = "cafe.adriel.voyager:voyager-screenmodel", version.ref = "voyagerVersion" }
voyager-tab-navigator = { module = "cafe.adriel.voyager:voyager-tab-navigator", version.ref = "voyagerNavigator" }
voyager-transitions-v110beta02 = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyagerTransitions" }

# Koin
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeMultiplatform" }

kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

# KMPRevenuecat - Subscription lib
kmprevenuecat-purchases = { group = "io.github.mirzemehdi", name = "kmprevenuecat-purchases", version.ref = "kmpRevenueCat" }
kmprevenuecat-purchases-ui = { group = "io.github.mirzemehdi", name = "kmprevenuecat-purchases-ui", version.ref = "kmpRevenueCat" }

# Ktor Client
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }

# Firebase
firebase-bom = { group = "com.google.firebase", name = "firebase-bom", version.ref = "firebaseBom" }
firebase-analytics = { group = "com.google.firebase", name = "firebase-analytics-ktx" }
firebase-crashlytics = { group = "com.google.firebase", name = "firebase-crashlytics-ktx" }
firebase-messaging = { group = "com.google.firebase", name = "firebase-messaging-ktx" }
gitlive-firebase-analytics = { module = "dev.gitlive:firebase-analytics", version.ref = "firebaseAnalytics" }
gitlive-firebase-perf = { module = "dev.gitlive:firebase-perf", version.ref = "firebasePerf" }
analytics = { module = "com.github.satoshun.firebase:analytics", version.ref = "analytics" }

# Push Notification
kmpNotifier = { group = "io.github.mirzemehdi", name = "kmpnotifier", version.ref = "kmpNotifier" }

# Authentication Library
kmpAuth-firebase = { group = "io.github.mirzemehdi", name = "kmpauth-firebase", version.ref = "kmpAuth" }
kmpAuth-google = { group = "io.github.mirzemehdi", name = "kmpauth-google", version.ref = "kmpAuth" }
kmpAuth-uihelper = { group = "io.github.mirzemehdi", name = "kmpauth-uihelper", version.ref = "kmpAuth" }

# Testing Libraries
assertk = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertk" }
compose-ui-test-junit4-android = { module = "androidx.compose.ui:ui-test-junit4-android", version.ref = "composeTest" }
compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "composeTest" }
core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtx" }
androidx-ui-android = { group = "androidx.compose.ui", name = "ui-android", version.ref = "uiAndroid" }

# DataStore
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
androidx-foundation-layout-android = { group = "androidx.compose.foundation", name = "foundation-layout-android", version.ref = "foundationLayoutAndroid" }
review-ktx = { group = "com.google.android.play", name = "review-ktx", version.ref = "reviewKtx" }

# Internet Connection
konnectivity = { module = "com.plusmobileapps:konnectivity", version.ref = "konnectivity" }

# App Rating
app-rating = { module = "com.stevdza-san:app-rating", version.ref = "appRating" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3Android" }

# Moko Permissions
permissions-compose = { module = "dev.icerock.moko:permissions-compose", version.ref = "permissionsCompose" }

# Google Ads
play-services-ads = { module = "com.google.android.gms:play-services-ads", version.ref = "playServicesAds" }
androidx-activity-ktx = { group = "androidx.activity", name = "activity-ktx", version.ref = "activityKtx" }
androidx-datastore-core-android = { group = "androidx.datastore", name = "datastore-core-android", version.ref = "datastoreCoreAndroid" }

[plugins]
google-services = { id = "com.google.gms.google-services", version.ref = "googleServicesVersion"}
firebase-crashlytics = { id = "com.google.firebase.crashlytics", version.ref = "firebaseCrashlytics" }

androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

#CocoaPods - Integrating Native IOS Libraries
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }


[bundles]
ktor = [
    "ktor-client-core",
    "ktor-client-content-negotiation",
    "ktor-client-auth",
    "ktor-client-logging",
    "ktor-serialization-kotlinx-json",
]